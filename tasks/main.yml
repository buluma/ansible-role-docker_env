---
# tasks file for docker_env

- name: pull/create containers
  block:
    - name: deploy os_Ubuntu images.
      docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        state: "{{ state }}"
        command: "{{ command }}"
        privileged: "{{ privileged }}"
        interactive: "{{ interactive }}"
        tty: "{{ tty }}"
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:ro
        capabilities: "{{ capabilities }}"
        restart_policy: "{{ restart_policy }}"
        container_default_behavior: "{{ container_default_behavior }}"
      with_items: "{{ ubuntu_images }}"
      when: prepare_ubuntu | bool

    - name: deploy os_CentOS/EL images.
      docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        state: "{{ state }}"
        command: "{{ command }}"
        privileged: "{{ privileged }}"
        interactive: "{{ interactive }}"
        tty: "{{ tty }}"
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:ro
        capabilities: "{{ capabilities }}"
        restart_policy: "{{ restart_policy }}"
        container_default_behavior: "{{ container_default_behavior }}"
      with_items: "{{ centos_images }}"
      when: prepare_centos | bool

    - name: deploy os_RockyLinux
      docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        state: "{{ state }}"
        command: "{{ command }}"
        privileged: "{{ privileged }}"
        interactive: "{{ interactive }}"
        tty: "{{ tty }}"
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:ro
        capabilities: "{{ capabilities }}"
        restart_policy: "{{ restart_policy }}"
        container_default_behavior: "{{ container_default_behavior }}"
      with_items: "{{ rockylinux_images }}"
      when: prepare_rockylinux | bool

# destroy docker_container
- name: destroy block
  block:
    - name: remove os_Ubuntu containers
      community.docker.docker_container:
        name: "{{ item.name }}"
        state: absent
      with_items: "{{ ubuntu_images }}"
      when: prune_ubuntu | bool

    - name: remove os_CentOS/EL containers
      community.docker.docker_container:
        name: "{{ item.name }}"
        state: absent
      with_items: "{{ centos_images }}"
      when: prune_centos | bool

    - name: remove os_RockyLinux containers
      community.docker.docker_container:
        name: "{{ item.name }}"
        state: absent
      with_items: "{{ rockylinux_images }}"
      when: prune_rockylinux | bool

# docker system prune
- name: prune docker system
  block:
    - name: docker system prune
      community.docker.docker_prune:
        containers: yes
        images: yes
        networks: yes
        volumes: yes
        builder_cache: yes
      when: prune_everything | bool
